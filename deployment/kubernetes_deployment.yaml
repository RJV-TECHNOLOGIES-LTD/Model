apiVersion: apps/v1
kind: Deployment
metadata:
  name: unified-model-ai
  labels:
    app: unified-model-ai
spec:
  replicas: 2  # Auto-scaling based on load
  selector:
    matchLabels:
      app: unified-model-ai
  template:
    metadata:
      labels:
        app: unified-model-ai
    spec:
      containers:
      - name: unified-model-ai
        image: gcr.io/YOUR_PROJECT_ID/unified-model-ai:latest
        ports:
        - containerPort: 8000
        resources:
          limits:
            memory: "4Gi"
            cpu: "2"
          requests:
            memory: "2Gi"
            cpu: "1"
        env:
          - name: AI_MODEL_BUCKET
            value: "your-ai-model-bucket"
          - name: AI_EXECUTION_MODE
            value: "cloud"  # Set to "edge" for local deployment
        volumeMounts:
          - name: ai-model-volume
            mountPath: /app/model

      volumes:
        - name: ai-model-volume
          persistentVolumeClaim:
            claimName: ai-model-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: unified-model-ai-service
spec:
  selector:
    app: unified-model-ai
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer  # Use NodePort for internal access or ClusterIP for internal-only services

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: unified-model-ai-statefulset
spec:
  serviceName: "unified-model-ai"
  replicas: 2
  selector:
    matchLabels:
      app: unified-model-ai
  template:
    metadata:
      labels:
        app: unified-model-ai
    spec:
      containers:
      - name: unified-model-ai
        image: gcr.io/YOUR_PROJECT_ID/unified-model-ai:latest
        ports:
        - containerPort: 8000
        volumeMounts:
          - name: ai-model-volume
            mountPath: /app/model
      volumes:
        - name: ai-model-volume
          persistentVolumeClaim:
            claimName: ai-model-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-model-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi  # Adjust size based on model requirements

---
apiVersion: apps/v1
kind: HorizontalPodAutoscaler
metadata:
  name: unified-model-ai-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: unified-model-ai
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unified-model-ai-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: unified-model-ai.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unified-model-ai-service
            port:
              number: 80
